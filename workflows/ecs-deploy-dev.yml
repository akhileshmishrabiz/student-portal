name: "Build Test and Release on Dev"

on:
   push:
    branches:
      - main
    paths:
      - src/**
  workflow_dispatch:

env:
  IMAGE_NAME: "flask-app"
  ECR_REGISTRY: "366140438193.dkr.ecr.ap-south-1.amazonaws.com"
  ECR_REPOSITORY: "dev-app"
  ACCOUNT_ID: "366140438193"
  ECS_CLUSTER: "dev-app-cluster"
  ECS_REGION: "ap-south-1"
  ECS_SERVICE: "dev-app-service"
  ECS_TASK_DEFINITION: "dev-app"
  ECS_APP_CONTAINER_NAME: "app"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docker container
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}:src"
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: APP_VERSION=${{ github.sha }}
          push: false
    
      #   configure aws credentials
      - name: Configure AWS Credentials
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ECS_REGION  }} 

      - name: Login to Amazon ECR
        if: ${{ github.ref == 'refs/heads/main' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
          registries: ${{ env.ACCOUNT_ID }}

      - name: Push image to Amazon ECR
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag $IMAGE_NAME:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags

      - name: Download task definition for web
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} \
          --query taskDefinition > task-definition.json
          ls -l task-definition.json

      - name: Fill in the new image ID for web in the Amazon ECS task definition
        if: ${{ github.ref == 'refs/heads/main' }}
        id: task-def-web
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.ECS_APP_CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy app on Amazon ECS task definition
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def-web.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
      